{"version":3,"sources":["public/twitterimg.png","public/ankiimg.png","public/spotifyimg.png","components/reusable/Title.jsx","components/reusable/Project.jsx","components/Portfolio.jsx","components/Home.jsx","components/NavMenu.jsx","App.js","serviceWorker.js","index.js","public/me2.jpg"],"names":["module","exports","__webpack_require__","p","Title","props","react_default","a","createElement","className","title","desc","Project","href","link","src","img","alt","tech","map","item","key","Portfolio","reusable_Title","reusable_Project","twitterimg","ankiimg","spotifyimg","me","Home","id","require","react_social_icons","url","NavMenu","BrowserRouter","Link","to","NavLink","activeClassName","Route","exact","path","component","App","components_NavMenu","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0RCWzBC,EATD,SAACC,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UAAKH,EAAMK,OACXJ,EAAAC,EAAAC,cAAA,SAAIH,EAAMM,QCgBDC,EApBC,SAACP,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGK,KAAMR,EAAMS,MACbR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcM,IAAKV,EAAMW,IAAKC,IAAI,KACjDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAKH,EAAMK,OACXJ,EAAAC,EAAAC,cAAA,SAAIH,EAAMM,MACVL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZJ,EAAMa,KAAKC,IAAI,SAAAC,GAAI,OAClBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBY,IAAKD,GAApC,IAA4CA,EAA5C,QAGJd,EAAAC,EAAAC,cAAA,kFCuCKc,EA7CG,WAChB,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAD,CAAOb,MAAM,YAAYC,KAAK,8DAC9BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACgB,EAAD,CACEV,KAAK,4CACLE,IAAKS,IACLf,MAAM,cACNC,KAAK,oCACLO,KAAM,CAAC,OAAQ,iBAEjBZ,EAAAC,EAAAC,cAACgB,EAAD,CACEV,KAAK,IACLE,IAAKU,IACLhB,MAAM,mBACNC,KAAK,oEACLO,KAAM,CAAC,OAAQ,WAAY,UAAW,UAAW,cAEnDZ,EAAAC,EAAAC,cAACgB,EAAD,CACEV,KAAK,IACLE,IAAKW,IACLjB,MAAM,wBACNC,KAAK,uFACLO,KAAM,CAAC,OAAQ,WAAY,UAAW,UAAW,cAAe,mBAAoB,gBAEtFZ,EAAAC,EAAAC,cAACgB,EAAD,CACEV,KAAK,IACLE,IAAKY,IACLlB,MAAM,uBACNC,KAAK,4CACLO,KAAM,CAAC,cAETZ,EAAAC,EAAAC,cAACgB,EAAD,CACEV,KAAK,2CACLE,IAAK,iCACLN,MAAM,cACNC,KAAK,+EACLO,KAAM,CAAC,WAAY,QAAS,mBCTvBW,EAlCF,WACX,OACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAD,CAAOb,MAAM,sBAAsBC,KAAK,+EACxCL,EAAAC,EAAAC,cAAA,OAAKsB,GAAG,KAAKf,IAAKgB,EAAQ,GAAsBd,IAAI,OACpDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,gPAIEH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WALF,sQASEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAVF,uEAYEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAbF,+GAeWF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,0IAAR,SAfX,YAiBAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WArBF,0CAuBEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwB,EAAA,WAAD,CAAYvB,UAAU,aAAawB,IAAI,kCACvC3B,EAAAC,EAAAC,cAACwB,EAAA,WAAD,CAAYvB,UAAU,aAAawB,IAAI,yDACvC3B,EAAAC,EAAAC,cAACwB,EAAA,WAAD,CAAYvB,UAAU,aAAawB,IAAI,mCCR9BC,EApBC,WACd,OACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMC,GAAG,IAAI5B,UAAU,QAAvB,wBACJH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAASD,GAAG,cAAc5B,UAAU,iBAAiB8B,gBAAgB,UAArE,gBAKNjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjCvB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOE,KAAK,cAAcD,OAAK,EAACE,UAAWrB,OCJpCsB,mLARX,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqC,EAAD,cAJUC,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInB9D,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.a67d6136.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitterimg.11c86fa0.png\";","module.exports = __webpack_public_path__ + \"static/media/ankiimg.ac99dcdd.png\";","module.exports = __webpack_public_path__ + \"static/media/spotifyimg.cb65e80c.png\";","import React from 'react';\r\n\r\nconst Title = (props) => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>{props.title}</h1>\r\n      <p>{props.desc}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;","import React from 'react'\r\n\r\nconst Project = (props) => {\r\n  return (\r\n    <div className=\"card grow\">\r\n      <a href={props.link}>\r\n        <img className=\"project-img\" src={props.img} alt=\"\" />\r\n        <div className=\"container\">\r\n          <h2>{props.title}</h2>\r\n          <p>{props.desc}</p>\r\n          <div className=\"tech-containter\">\r\n            {props.tech.map(item => (\r\n              <div className=\"tech clearfix\" key={item}> {item} </div>\r\n            ))}\r\n          </div>\r\n          <br />\r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;","import React from 'react';\r\nimport Title from \"./reusable/Title\";\r\nimport Project from \"./reusable/Project\";\r\n\r\nimport twitterimg from \"../public/twitterimg.png\";\r\nimport ankiimg from \"../public/ankiimg.png\";\r\nimport spotifyimg from \"../public/spotifyimg.png\";\r\nimport me from \"../public/me2.jpg\";\r\n\r\nconst Portfolio = () => {\r\n  return (\r\n    <div>\r\n      <Title title=\"Portfolio\" desc=\"A list of all my learning / completed / ongoing projects.\" />\r\n      <div className=\"project-cards\">\r\n        <Project\r\n          link=\"https://twitter.com/coffeebeepbot?lang=en\"\r\n          img={twitterimg}\r\n          title=\"Twitter Bot\"\r\n          desc=\"A twitter bot about coffee facts.\"\r\n          tech={[\"Node\", \"Twitter API\"]}\r\n        />\r\n        <Project\r\n          link=\"#\"\r\n          img={ankiimg}\r\n          title=\"Resource sharing\"\r\n          desc=\"A website for sharing Anki flashcard decks for language learning.\"\r\n          tech={[\"Node\", \"React.js\", \"Next.js\", \"MongoDB\", \"AmazonS3\"]}\r\n        />\r\n        <Project\r\n          link=\"#\"\r\n          img={spotifyimg}\r\n          title=\"Multi-user song queue\"\r\n          desc=\"A web app for several users to queue up songs; made for a business development team.\"\r\n          tech={[\"Node\", \"React.js\", \"Next.js\", \"MongoDB\", \"Spotify API\", \"Amazon Alexa API\", \"Tensorflow\"]}\r\n        />\r\n        <Project\r\n          link=\"#\"\r\n          img={me}\r\n          title=\"My portfolio website\"\r\n          desc=\"Built using react.js to showcase my work.\"\r\n          tech={[\"React.js\"]}\r\n        />\r\n        <Project\r\n          link=\"https://perjermer.github.io/robofriends/\"\r\n          img={'https://robohash.org/1?300x300'}\r\n          title=\"Robofriends\"\r\n          desc=\"Developed as part of a Udemy course for the fundamentals of React.js & Redux\"\r\n          tech={[\"React.js\", \"Redux\", \"API\"]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport Title from \"./reusable/Title\";\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Title title=\"Pierce James Morris\" desc=\"Aspiring web developer, avid Japanese learner, Comp Sci university student\" />\r\n      <img id=\"me\" src={require('../public/me2.jpg')} alt=\"me\" />\r\n      <div className=\"text\">\r\n        Started programming back in 2015; learnt the fundamentals using Python, creating very simple\r\n        algorithms and desktop shortcuts. Found an interest into the many aspects of web development\r\n        from backend to frontend and everything in between.\r\n        <br />\r\n        <br />\r\n        I had a taste of full stack development first with PHP as part of a first year University\r\n        project, which inspired me to look into other web development frameworks/libraries i.e. Node & React.\r\n        Since then, I've been honing my skills whilst working on my degree.\r\n        <br />\r\n        <br />\r\n        I work with backend technologies such as Node, C# ASP.NET/.NET Core/\r\n        <br />\r\n        <br />\r\n        I am currently studying Computer Science & Artificial Intelligence & learning Japanese on the side\r\n        with the <a href=\"http://www.alljapaneseallthetime.com/blog/all-japanese-all-the-time-ajatt-how-to-learn-japanese-on-your-own-having-fun-and-to-fluency/\">AJATT</a> method.\r\n      </div>\r\n      <br />\r\n      <br />\r\n      You can find me on several social media\r\n      <br />\r\n      <br />\r\n      <SocialIcon className=\"space grow\" url=\"https://twitter.com/perjermer\" />\r\n      <SocialIcon className=\"space grow\" url=\"https://www.linkedin.com/in/pierce-morris-166698136/\" />\r\n      <SocialIcon className=\"space grow\" url=\"https://github.com/perjermer\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, NavLink, Link } from \"react-router-dom\";\r\nimport Portfolio from \"./Portfolio\";\r\nimport Home from \"./Home\";\r\n\r\nconst NavMenu = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <div className=\"nav\">\r\n          <ul className=\"nav\">\r\n            <li><Link to=\"/\" className=\"name\">Pierce James Morris</Link></li>\r\n            <li>\r\n              <NavLink to=\"/portfolio/\" className=\"nav-item hover\" activeClassName=\"active\">Portfolio</NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/portfolio/\" exact component={Portfolio} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default NavMenu;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport NavMenu from \"./components/NavMenu\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <NavMenu />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/me2.4684e612.jpg\";"],"sourceRoot":""}