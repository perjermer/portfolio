{"version":3,"sources":["public/me2.jpg","components/reusable/Title.jsx","components/reusable/Project.jsx","components/Portfolio.jsx","components/About.jsx","components/Contact.jsx","components/NavMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Title","props","react_default","a","createElement","className","title","desc","Project","src","alt","Portfolio","reusable_Title","reusable_Project","About","id","require","href","Contact","react_social_icons","url","NavMenu","BrowserRouter","Link","to","NavLink","activeClassName","Route","path","component","exact","App","components_NavMenu","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0279725.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me2.4684e612.jpg\";","import React from 'react';\n\nconst Title = (props) => {\n  return (\n    <div className=\"title\">\n      <h1>{props.title}</h1>\n      <p>{props.desc}</p>\n    </div>\n  );\n}\n\nexport default Title;","import React from 'react'\n\nconst Project = () => {\n  return (\n    <div className=\"card grow\">\n      <img src=\"https://picsum.photos/300/300\" alt=\"\" />\n      <div className=\"container\">\n        <h2>Twitter Bot</h2>\n        <p>Created a bot to learn the twitter API Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis odit facilis iure, tenetur quae vero doloremque incidunt quia repellat fugit officiis aliquid quisquam consectetur ex maiores asperiores enim dolorum sequi!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;","import React from 'react';\nimport Title from \"./reusable/Title\";\nimport Project from \"./reusable/Project\";\n\nconst Portfolio = () => {\n  return (\n    <div>\n      <Title title=\"Portfolio\" desc=\"A list of all my learning / completed / ongoing projects.\" />\n      <div className=\"project-cards\">\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      <Project />\n      </div>\n    </div>\n  );\n}\n\nexport default Portfolio;","import React from 'react';\nimport Title from \"./reusable/Title\";\n\nconst About = () => {\n  return (\n    <div>\n      <Title title=\"About\" desc=\"All you need to know about me.\" />\n      <img id=\"me\" src={require('../public/me2.jpg')} alt=\"me\" />\n      <div className=\"text\">\n        Started programming back in 2015; learnt the fundamentals using Python, creating very simple\n        algorithms and desktop shortcuts. Found an interest into the many aspects of web development\n        from backend to frontend and everything in between.\n        <br />\n        <br />\n        I had a taste of full stack development first with PHP as part of a first year University\n        project, which inspired me to look into other web development frameworks/libraries i.e. Node & React.\n        Since then, I've been honing my skills whilst working on my degree.\n        <br />\n        <br />\n        I am currently studying Computer Science & Artificial Intelligence & learning Japanese on the side\n        with the <a href=\"http://www.alljapaneseallthetime.com/blog/all-japanese-all-the-time-ajatt-how-to-learn-japanese-on-your-own-having-fun-and-to-fluency/\">AJATT</a> method.\n      </div>\n    </div>\n  );\n}\n\nexport default About;","import React from 'react';\nimport Title from \"./reusable/Title\";\nimport { SocialIcon } from 'react-social-icons';\n\nconst Contact = () => {\n  return (\n    <div>\n      <Title title=\"Contact\" desc=\"Get in touch.\" />\n      <div className=\"body-content\">\n        You can find me on several social media\n        <br />\n        <br />\n        <SocialIcon className=\"space grow\" url=\"https://twitter.com/perjermer\" />\n        <SocialIcon className=\"space grow\" url=\"https://www.linkedin.com/in/pierce-morris-166698136/\" />\n        <SocialIcon className=\"space grow\" url=\"https://github.com/perjermer\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;","import React from 'react';\nimport { BrowserRouter as Router, Route, NavLink, Link } from \"react-router-dom\";\nimport Portfolio from \"./Portfolio\";\nimport About from \"./About\";\nimport Contact from \"./Contact\";\n\nconst NavMenu = () => {\n  return (\n    <Router>\n      <div>\n        <div className=\"nav\">\n          <ul className=\"nav\">\n            <li><Link to=\"/\" className=\"name\">Pierce James Morris</Link></li>\n            <li>\n              <NavLink to=\"/contact/\" className=\"nav-item hover\" activeClassName=\"active\">Contact</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/about/\" className=\"nav-item hover\" activeClassName=\"active\">About</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/portfolio/\" className=\"nav-item hover\" activeClassName=\"active\">Portfolio</NavLink>\n            </li>\n          </ul>\n        </div>\n\n        <Route path=\"/about/\" component={About} />\n        <Route path=\"/contact/\" component={Contact} />\n        <Route path=\"/portfolio/\" exact component={Portfolio} />\n      </div>\n    </Router>\n  );\n}\n\nexport default NavMenu;","import React, { Component } from 'react';\nimport './App.css';\n\nimport NavMenu from \"./components/NavMenu\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <NavMenu />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}